import os
import pygame
import re  

scriptVersion = "1.1.0"
scriptName = "M3U_PSX"

pygame.init()

font = pygame.font.Font(None, 36)
message_font = pygame.font.Font(None, 36)
screen = pygame.display.set_mode((640, 480))

def show_message(message):
    print(message)  # Terminalde de g√∂ster
    screen.fill((0, 0, 0))
    text_surface = message_font.render(message, True, (255, 255, 255))
    text_rect = text_surface.get_rect(center=(screen.get_width() // 2, screen.get_height() // 2))
    screen.blit(text_surface, text_rect.topleft)
    pygame.display.flip()
    pygame.time.wait(2000)

DISK_REGEX = re.compile(r"(\s*\([Dd]isc\s*\d+\)|\s*\[disc\s*\d+\]|\s*\([Dd]isk\s*\d+\))")

EXCLUDED_FOLDERS = ["images", "manuals", "videos"]

def create_M3U():
    pygame_dir = os.path.dirname(os.path.abspath(__file__))
    base_dir = os.path.dirname(pygame_dir)
    psx_dir = os.path.join(base_dir, "psx")
    
    if not os.path.exists(psx_dir):
        show_message(f"PSX directory not found at: {psx_dir}")
        return

    grouped_files = {}

    for root, dirs, files in os.walk(psx_dir):
        relative_root = os.path.relpath(root, psx_dir)
        
        if any(excluded in relative_root.split(os.sep) for excluded in EXCLUDED_FOLDERS):
            continue

        for file in files:
            file_path = os.path.join(root, file)

            if not file.lower().endswith((".bin", ".cue", ".img", ".iso", ".chd", ".pbp")):
                continue  

            base_name = DISK_REGEX.sub("", file).strip()
            base_name = os.path.splitext(base_name)[0]

            if base_name not in grouped_files:
                grouped_files[base_name] = []
            grouped_files[base_name].append(file_path)

    if not grouped_files:
        show_message("No multi-disc games found!")
        return

    created_any_m3u = False

    for base_name, file_list in grouped_files.items():
        if len(file_list) < 2:
            continue  

        m3u_path = os.path.join(psx_dir, f"{base_name}.m3u")

        if os.path.exists(m3u_path):
            show_message(f"{base_name}.m3u already exists!")
            continue

        with open(m3u_path, "w") as m3u_file:
            for file in sorted(file_list):
                relative_path = os.path.relpath(file, psx_dir)
                m3u_file.write(relative_path + "\n")

        show_message(f"{base_name}.m3u created!")
        created_any_m3u = True

    if not created_any_m3u:
        show_message("No new multi-disc games found!")

    if created_any_m3u:
        show_message("Refresh gamelists to see added games")

def main():
    create_M3U()
    show_message("Exiting...")
    pygame.quit()

if __name__ == "__main__":
    show_message(f"Starting {scriptName} v{scriptVersion} by Ali BEYAZ...")
    main()
